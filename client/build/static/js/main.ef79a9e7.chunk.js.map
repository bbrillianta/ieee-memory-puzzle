{"version":3,"sources":["Components/event_list/EventList.js","Components/button/Button.js","Components/game-board/GameBoard.js","Components/end_game/EndBlock.js","Layouts/Main.js","Components/how_to/HowTo.js","Components/start_game/StartBlock.js","Layouts/MainStart.js","App.js","reportWebVitals.js","index.js"],"names":["EventList","props","useState","className","prevQuestion","date","event","desc","href","url","target","Button","text","onClick","type","name","GameBoard","lives","src","alt","score","currQuestion","checkAnswer","said","Math","floor","random","EndBlock","to","Main","fetchData","a","fetch","response","json","data","setQuestions","foundDocs","questions","useEffect","localStorage","clear","setCurrQuestion","setPrevQuestion","setLives","setScore","e","answer","innerHTML","check","getItem","setItem","console","log","i","length","key","HowTo","id","StartBlock","MainStart","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef79a9e7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { BsXDiamondFill } from \"react-icons/bs\";\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\n\n\n\nimport './EventList.css';\n\nconst EventList = (props) =>{\n    const [events, setEvents] = useState();\n\n    return(<>\n    <div className=\"cont-event\">\n        <div className=\"event\">\n            { props.prevQuestion &&\n                <div>\n                    <h4 className=\"d-flex justify-content-center\">Important event on: {props.prevQuestion?.date}</h4>\n                    { \n                        <p><BsXDiamondFill /> &nbsp;\n                            {props.prevQuestion?.event[0].desc} &nbsp; \n                            <a href={props.prevQuestion?.event[0].url} target=\"_blank\"><BsFillInfoCircleFill /></a>\n                        </p>\n                    }\n                    <p className=\"text-right\">Click the  <BsFillInfoCircleFill /> icon to read more.</p>\n                    <br />\n                </div>\n            }\n        </div>\n    </div>\n    </>);\n}\n\nexport default EventList;","import './Button.css';\n\nconst Button = (text) => {\n    return (\n        <button onClick={text.onClick} type=\"button\" className=\"btn btn-app\">{ text.name }</button>\n    );\n}\n\nexport default Button;","import './GameBoard.css';\nimport Button from '../button/Button.js';\nimport { useEffect, useState } from 'react';\n\nconst GameBoard = (props) => {\n    return (\n        <div className=\"cont\">\n        <div className=\"game-board container\">\n            <div className=\"row pt-3 pb-3\">\n                <div className=\"col-md-6\">\n                    <p className=\"ml-5\">\n                        Life: \n                        { props.lives >= 1 \n                            ? <img className=\"ml-2\" src=\"./heart.png\" alt=\"heart\"></img> \n                            : <img className=\"ml-2\" src=\"./heart-gone.png\" alt=\"heart\"></img>\n                        }\n                        { props.lives >= 2 \n                           ? <img className=\"ml-1\" src=\"./heart.png\" alt=\"heart\"></img> \n                           : <img className=\"ml-1\" src=\"./heart-gone.png\" alt=\"heart\"></img> \n                        }\n                        { props.lives == 3 \n                            ? <img className=\"ml-1\"  src=\"./heart.png\" alt=\"heart\"></img> \n                            : <img className=\"ml-1\"  src=\"./heart-gone.png\" alt=\"heart\"></img> \n                        }\n                    </p> \n                </div>\n                <div className=\"col-md-6 text-right\">\n                    <p className=\"mr-5\">\n                        Points: { props.score }\n                    </p>\n                </div>\n            </div>\n            <div className=\"row question-board py-3\">\n                <div className=\"col text-center question-text\">{ props.currQuestion.date }</div>\n            </div>\n            <div className=\"row pt-4 pb-4\">\n                <div className=\"col-md-6 d-flex justify-content-end\">\n                    <Button onClick={props.checkAnswer} name=\"FOUND\" />\n                </div>\n                <div className=\"col-md-6 \">\n                    <Button onClick={props.checkAnswer} name=\"NEW\" />\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default GameBoard;","import './EndBlock.css';\nimport Button from '../button/Button.js';\nimport {\n    Link\n  } from 'react-router-dom';\n\nlet complement = [\n    \"Nicely Done !\",\n    \"Well Done !\",\n    \"Terrific !\",\n    \"Nice !\",\n    \"Awesome !\",\n    \"Nailed it !\",\n    \"Great !\",\n    \"Good Job !\",\n    \"Great Job !\",\n    \"Nice One !\"\n];\n\nlet said = complement[Math.floor(Math.random() * 10)];\n\nconst EndBlock = (props) => {\n    return (\n        <div className=\"cont\">\n        <div className=\"game-board container\">\n            <div className=\"row pt-3 pb-3\">\n                <div className=\"col-md-6\">\n                    <p className=\"ml-5\">\n                        &nbsp;\n                    </p> \n                </div>\n                <div className=\"col-md-6 text-right\">\n                    <p className=\"mr-5\">\n                        &nbsp;\n                    </p>\n                </div>\n            </div>\n            <div className=\"row question-board py-4\">\n                <div className=\"col text-center question-text\"> <strong>{ props.score }</strong> <br />{said}</div>\n            </div>            \n            <div className=\"row py-5 pb-4\">\n                <div className=\"col d-flex justify-content-center\">\n                    <Link to=\"/\"><Button name=\"PLAY AGAIN\" /></Link>\n                    \n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default EndBlock;","import React, { useEffect, useState } from 'react';\nimport './Main.css';\n\nimport EventList from '../Components/event_list/EventList';\nimport GameBoard from '../Components/game-board/GameBoard';\n\nimport EndBlock from '../Components/end_game/EndBlock';\n\nconst Main = () =>{\n    const fetchData = async () => {\n        const response = await fetch('https://revisited.herokuapp.com/dates');\n        const data = await response.json();\n        await setQuestions(data.foundDocs);\n    }\n\n    const [questions, setQuestions] = useState([{}]);\n\n    useEffect(() => {\n        localStorage.clear();\n        fetchData();\n    }, []);\n\n    const [currQuestion, setCurrQuestion] = useState(questions[0]);\n\n    const [prevQuestion, setPrevQuestion] = useState();\n\n    useEffect(() => setCurrQuestion(questions[0]), [questions[0]]);\n\n    const randQuestion = () => questions[Math.floor(Math.random() * questions.length)];\n\n    const [lives, setLives] = useState(3);\n\n    const [score, setScore] = useState(0);\n\n    const checkAnswer = (e) => {\n        const answer = e.target.innerHTML;\n        const check = currQuestion.date;\n        const item = localStorage.getItem(check);\n        if(!item) {\n            localStorage.setItem(check, true);\n            if(answer == \"FOUND\") setLives(lives - 1);\n            else setScore(score + 1);\n        } else {\n            if(answer == 'NEW') setLives(lives - 1);\n            else setScore(score + 1);\n        }\n        console.log(lives);\n        for (var i = 0; i < localStorage.length; i++){\n            console.log(localStorage.key(i));\n        }\n        setPrevQuestion(currQuestion);\n        setCurrQuestion(randQuestion());\n    }\n\n    return(<>\n        <div className=\"container-fluid back\">\n            { lives > 0 \n            ? <div>\n                <GameBoard \n                questions={questions} \n                currQuestion={currQuestion} \n                setCurrQuestion={setCurrQuestion} \n                checkAnswer={checkAnswer}\n                score={score}\n                lives={lives}\n                 />\n                <EventList prevQuestion={prevQuestion} checkAnswer={checkAnswer} currQuestion={currQuestion} />\n             </div>\n            : <EndBlock score={score} />\n            }\n        </div>\n    </>);\n}\n\nexport default Main;","import React from 'react';\nimport './HowTo.css';\n\nconst HowTo = () =>{\n    return(<>\n        <div className=\"cont-how\">\n            <div className=\"how\">\n                <h3 className=\"d-flex justify-content-center\">How to Play</h3>\n                <p>A Date (ex: 1 January 2001) will be shown to you, one at a time. If you’ve <strong>found</strong> that date \n                    <strong> more than once</strong> during the game, click <strong>FOUND</strong> and if it’s a <strong>new word</strong>, click <strong>NEW</strong>. If you make a wrong choice,\n                    you will lose one life point, and if you lose all of your life point the game will be over.\n                </p>\n                <p id=\"akhir\">\n                    Note that we provide trivial information about important events that happened on each date so that you can play and learn history at the same time. You can see that information after you click FOUND or NEW, Have Fun !\n                </p>\n            </div>\n        </div>\n    </>);\n}\n\nexport default HowTo;","import './StartBlock.css';\nimport Button from '../button/Button.js';\nimport {\n    Link\n  } from 'react-router-dom';\n\nconst StartBlock = () => {\n    return (\n        <div className=\"cont-start\">\n            <div className=\"start-board container\">\n                <div className=\"row d-flex justify-content-center pt-3\">\n                    <img className=\"log\" src=\"./logorevisited.png\"></img>\n                </div>\n                <div className=\"row pt-2 pb-5\">\n                    <div className=\"col-md-7 d-flex justify-content-end\">\n                    <Link to=\"/game\"><Button name=\"START\"/></Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default StartBlock;","import React from 'react';\nimport './Main.css';\n\nimport HowTo from '../Components/how_to/HowTo';\nimport StartBlock from '../Components/start_game/StartBlock';\n\nconst MainStart = () =>{\n    return(<>\n        <div className=\"container-fluid back\">\n            <StartBlock />\n            <HowTo />\n        </div>\n    </>);\n}\n\nexport default MainStart;","import './App.css';\nimport Main from './Layouts/Main';\nimport MainStart from './Layouts/MainStart';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n        <Link to=\"/game\"></Link>\n        <Link to=\"/start\"></Link>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/game\">\n            <Main />\n          </Route>\n          <Route exact path=\"/\">\n            <MainStart />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}